% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-lazymatrix.R
\name{ClassLazyMatrix}
\alias{ClassLazyMatrix}
\title{Internal Class definition for \code{LazyMatrix}}
\description{
Internal class definition of lazy matrix objects
}
\author{
Zhengjia Wang
}
\section{Super class}{
\code{\link[lazyarray:LazyArray]{lazyarray::LazyArray}} -> \code{LazyMatrix}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{@transposed}}{whether the matrix is transposed}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{dim}}{dimension of the matrix}

\item{\code{dimnames}}{dimension names of the matrix}

\item{\code{rownames}}{row names of the matrix}

\item{\code{colnames}}{column names of the matrix}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-transpose}{\code{ClassLazyMatrix$transpose()}}
\item \href{#method-print}{\code{ClassLazyMatrix$print()}}
\item \href{#method-new}{\code{ClassLazyMatrix$new()}}
\item \href{#method-set_dim}{\code{ClassLazyMatrix$set_dim()}}
\item \href{#method-@set_data}{\code{ClassLazyMatrix$@set_data()}}
\item \href{#method-@get_data}{\code{ClassLazyMatrix$@get_data()}}
\item \href{#method-multiply_mat}{\code{ClassLazyMatrix$multiply_mat()}}
\item \href{#method-clone}{\code{ClassLazyMatrix$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="lazyarray" data-topic="LazyArray" data-id="@generate_parition_summary">}\href{../../lazyarray/html/LazyArray.html#method-@generate_parition_summary}{\code{lazyarray::LazyArray$@generate_parition_summary()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="lazyarray" data-topic="LazyArray" data-id="@partition_map">}\href{../../lazyarray/html/LazyArray.html#method-@partition_map}{\code{lazyarray::LazyArray$@partition_map()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="lazyarray" data-topic="LazyArray" data-id="@sample_data">}\href{../../lazyarray/html/LazyArray.html#method-@sample_data}{\code{lazyarray::LazyArray$@sample_data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="lazyarray" data-topic="LazyArray" data-id="finalize">}\href{../../lazyarray/html/LazyArray.html#method-finalize}{\code{lazyarray::LazyArray$finalize()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="lazyarray" data-topic="LazyArray" data-id="flag_auto_clean">}\href{../../lazyarray/html/LazyArray.html#method-flag_auto_clean}{\code{lazyarray::LazyArray$flag_auto_clean()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="lazyarray" data-topic="LazyArray" data-id="get_compress_level">}\href{../../lazyarray/html/LazyArray.html#method-get_compress_level}{\code{lazyarray::LazyArray$get_compress_level()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="lazyarray" data-topic="LazyArray" data-id="get_file_format">}\href{../../lazyarray/html/LazyArray.html#method-get_file_format}{\code{lazyarray::LazyArray$get_file_format()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="lazyarray" data-topic="LazyArray" data-id="get_partition_fpath">}\href{../../lazyarray/html/LazyArray.html#method-get_partition_fpath}{\code{lazyarray::LazyArray$get_partition_fpath()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="lazyarray" data-topic="LazyArray" data-id="get_storage_format">}\href{../../lazyarray/html/LazyArray.html#method-get_storage_format}{\code{lazyarray::LazyArray$get_storage_format()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="lazyarray" data-topic="LazyArray" data-id="is_multi_part">}\href{../../lazyarray/html/LazyArray.html#method-is_multi_part}{\code{lazyarray::LazyArray$is_multi_part()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="lazyarray" data-topic="LazyArray" data-id="make_readonly">}\href{../../lazyarray/html/LazyArray.html#method-make_readonly}{\code{lazyarray::LazyArray$make_readonly()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="lazyarray" data-topic="LazyArray" data-id="make_writable">}\href{../../lazyarray/html/LazyArray.html#method-make_writable}{\code{lazyarray::LazyArray$make_writable()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="lazyarray" data-topic="LazyArray" data-id="partition_dim">}\href{../../lazyarray/html/LazyArray.html#method-partition_dim}{\code{lazyarray::LazyArray$partition_dim()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="lazyarray" data-topic="LazyArray" data-id="partition_summary">}\href{../../lazyarray/html/LazyArray.html#method-partition_summary}{\code{lazyarray::LazyArray$partition_summary()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="lazyarray" data-topic="LazyArray" data-id="remove_data">}\href{../../lazyarray/html/LazyArray.html#method-remove_data}{\code{lazyarray::LazyArray$remove_data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="lazyarray" data-topic="LazyArray" data-id="set_compress_level">}\href{../../lazyarray/html/LazyArray.html#method-set_compress_level}{\code{lazyarray::LazyArray$set_compress_level()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-transpose"></a>}}
\if{latex}{\out{\hypertarget{method-transpose}{}}}
\subsection{Method \code{transpose()}}{
Transpose matrix
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClassLazyMatrix$transpose()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
Override print method
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClassLazyMatrix$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{ignored}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
self instance
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Constructor
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClassLazyMatrix$new(path, read_only = TRUE, meta_name = "lazyarray.meta")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{directory to store data into}

\item{\code{read_only}}{whether modification is allowed}

\item{\code{meta_name}}{meta file to store the data into}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set_dim"></a>}}
\if{latex}{\out{\hypertarget{method-set_dim}{}}}
\subsection{Method \code{set_dim()}}{
Set \code{\link[base]{dim}} and \code{\link[base]{dimnames}} of the matrix
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClassLazyMatrix$set_dim(dim, dimnames)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dim}}{integer vector of the matrix dimension; see \code{\link[base]{dim}}}

\item{\code{dimnames}}{named list of dimension names; see \code{\link[base]{dimnames}}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-@set_data"></a>}}
\if{latex}{\out{\hypertarget{method-@set_data}{}}}
\subsection{Method \code{@set_data()}}{
Internal method to set data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClassLazyMatrix$@set_data(value, i = NULL, j = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{value}}{vector of data to be set}

\item{\code{i, j}}{index set}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-@get_data"></a>}}
\if{latex}{\out{\hypertarget{method-@get_data}{}}}
\subsection{Method \code{@get_data()}}{
Internal method to read data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClassLazyMatrix$@get_data(i = NULL, j = NULL, drop = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{i, j}}{index set}

\item{\code{drop}}{whether to drop dimension after subset, default is true}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-multiply_mat"></a>}}
\if{latex}{\out{\hypertarget{method-multiply_mat}{}}}
\subsection{Method \code{multiply_mat()}}{
Matrix multiplication
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClassLazyMatrix$multiply_mat(x, chunk_size = "auto", ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{another \code{LazyMatrix} or normal matrix}

\item{\code{chunk_size}}{chunk size to use}

\item{\code{...}}{ignored}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{ClassLazyMatrix$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
