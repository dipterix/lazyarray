// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// cpp_create_lazyarray
SEXP cpp_create_lazyarray(SEXP& x, IntegerVector& dim, String& fileName, int compression, bool uniformEncoding);
RcppExport SEXP _lazyarray_cpp_create_lazyarray(SEXP xSEXP, SEXP dimSEXP, SEXP fileNameSEXP, SEXP compressionSEXP, SEXP uniformEncodingSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP& >::type x(xSEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type dim(dimSEXP);
    Rcpp::traits::input_parameter< String& >::type fileName(fileNameSEXP);
    Rcpp::traits::input_parameter< int >::type compression(compressionSEXP);
    Rcpp::traits::input_parameter< bool >::type uniformEncoding(uniformEncodingSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_create_lazyarray(x, dim, fileName, compression, uniformEncoding));
    return rcpp_result_gen;
END_RCPP
}
// cpp_load_lazyarray
SEXP cpp_load_lazyarray(StringVector& files, List& partition_locations, IntegerVector& partition_dim, R_xlen_t ndim, SEXP value_type);
RcppExport SEXP _lazyarray_cpp_load_lazyarray(SEXP filesSEXP, SEXP partition_locationsSEXP, SEXP partition_dimSEXP, SEXP ndimSEXP, SEXP value_typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< StringVector& >::type files(filesSEXP);
    Rcpp::traits::input_parameter< List& >::type partition_locations(partition_locationsSEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type partition_dim(partition_dimSEXP);
    Rcpp::traits::input_parameter< R_xlen_t >::type ndim(ndimSEXP);
    Rcpp::traits::input_parameter< SEXP >::type value_type(value_typeSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_load_lazyarray(files, partition_locations, partition_dim, ndim, value_type));
    return rcpp_result_gen;
END_RCPP
}
// test_fstcore_write
SEXP test_fstcore_write(String filename);
RcppExport SEXP _lazyarray_test_fstcore_write(SEXP filenameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< String >::type filename(filenameSEXP);
    rcpp_result_gen = Rcpp::wrap(test_fstcore_write(filename));
    return rcpp_result_gen;
END_RCPP
}
// cpp_fst_meta_orig
SEXP cpp_fst_meta_orig(Rcpp::String fileName);
RcppExport SEXP _lazyarray_cpp_fst_meta_orig(SEXP fileNameSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::String >::type fileName(fileNameSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_fst_meta_orig(fileName));
    return rcpp_result_gen;
END_RCPP
}
// cpp_index_to_index
IntegerVector cpp_index_to_index(IntegerVector& idx, List& locations, IntegerVector& parent_dim);
RcppExport SEXP _lazyarray_cpp_index_to_index(SEXP idxSEXP, SEXP locationsSEXP, SEXP parent_dimSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector& >::type idx(idxSEXP);
    Rcpp::traits::input_parameter< List& >::type locations(locationsSEXP);
    Rcpp::traits::input_parameter< IntegerVector& >::type parent_dim(parent_dimSEXP);
    rcpp_result_gen = Rcpp::wrap(cpp_index_to_index(idx, locations, parent_dim));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_lazyarray_cpp_create_lazyarray", (DL_FUNC) &_lazyarray_cpp_create_lazyarray, 5},
    {"_lazyarray_cpp_load_lazyarray", (DL_FUNC) &_lazyarray_cpp_load_lazyarray, 5},
    {"_lazyarray_test_fstcore_write", (DL_FUNC) &_lazyarray_test_fstcore_write, 1},
    {"_lazyarray_cpp_fst_meta_orig", (DL_FUNC) &_lazyarray_cpp_fst_meta_orig, 1},
    {"_lazyarray_cpp_index_to_index", (DL_FUNC) &_lazyarray_cpp_index_to_index, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_lazyarray(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
